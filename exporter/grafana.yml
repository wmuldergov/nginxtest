---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"nginx-grafana"}}'
  name: grafana
  namespace: 80c8d5-dev
---
apiVersion: v1
data:
  grafana.ini: |
    [auth]
    disable_login_form = true
    disable_signout_menu = true
    oauth_auto_login = true

    [auth.anonymous]
    enabled = false

    [auth.basic]
    enabled = true

    [auth.proxy]
    auto_sign_up = true
    enabled = true
    header_name = X-Forwarded-User
    header_property = username

    [log]
    level = warn
    mode = console

    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning/
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: 80c8d5-dev
---
apiVersion: v1
data:
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: 80c8d5-dev
---
apiVersion: v1
data:
  nginx_grafana_datasource.yml: |
    ###
    #
    # Copyright 2017-2023 Crunchy Data Solutions, Inc. All Rights Reserved.
    #
    ###

    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # what's available in the database
    datasources:
      # <string, required> name of the datasource. Required
    - name: PROMETHEUS
      # <string, required> datasource type. Required
      type: prometheus
      # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
      access: proxy
      # <int> org id. will default to orgId 1 if not specified
      orgId: 1
      # <string> url
      url: http://$PROM_HOST:$PROM_PORT
      # <string> database password, if used
      password:
      # <string> database user, if used
      user:
      # <string> database name, if used
      database:
      # <bool> enable/disable basic auth
      basicAuth:
      # <string> basic auth username
      basicAuthUser:
      # <string> basic auth password
      basicAuthPassword:
      # <bool> enable/disable with credentials headers
      withCredentials:
      # <bool> mark as default datasource. Max one per org
      isDefault: true
      version: 1
      # <bool> allow users to edit datasources from the UI.
      editable: false
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator-monitoring
    vendor: nginxdata
  name: grafana-datasources
  namespace: 80c8d5-dev
---
apiVersion: v1
data:
  password: YWRtaW4=
  username: YWRtaW4=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator-monitoring
    vendor: nginxdata
  name: grafana-secret
  namespace: 80c8d5-dev
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-grafana
  namespace: 80c8d5-dev
spec:
  ports:
  - name: grafana
    port: 3000
  - name: grafana-proxy
    port: 9091
    protocol: TCP
    targetPort: grafana-proxy
  selector:
    name: nginx-grafana
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafanadata
  namespace: 80c8d5-dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app.kubernetes.io/name: postgres-operator-monitoring
  name: nginx-grafana
  namespace: 80c8d5-dev
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-operator-monitoring
      name: nginx-grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-operator-monitoring
        name: nginx-grafana
    spec:
      containers:
      - env:
        - name: GF_PATHS_DATA
          value: /data/grafana/data
        - name: GF_SECURITY_ADMIN_USER__FILE
          value: /conf/admin/username
        - name: GF_SECURITY_ADMIN_PASSWORD__FILE
          value: /conf/admin/password
        - name: PROM_HOST
          value: nginx-prometheus
        - name: PROM_PORT
          value: "9090"
        image: grafana/grafana:10.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 25
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/grafana/
          name: grafana-config
        - mountPath: /data
          name: grafanadata
        - mountPath: /conf/admin
          name: grafana-secret
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
      - args:
        - --provider=openshift
        - --pass-basic-auth=false
        - --https-address=
        - --http-address=:9091
        - --email-domain=*
        - --upstream=http://localhost:3000
        - --cookie-secret=asdf
        - --openshift-service-account=grafana
        - --skip-auth-regex=^/metrics
        - '--openshift-sar={"namespace": "80c8d5-dev", "resource": "services", "verb":
          "get"}'
        image: image-registry.openshift-image-registry.svc:5000/openshift/oauth-proxy:v4.4
        imagePullPolicy: IfNotPresent
        name: grafana-proxy
        ports:
        - containerPort: 9091
          name: grafana-proxy
          protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: grafana
      serviceAccountName: grafana
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-config
        name: grafana-config
      - name: grafanadata
        persistentVolumeClaim:
          claimName: grafanadata
      - name: grafana-secret
        secret:
          defaultMode: 420
          secretName: grafana-secret
      - configMap:
          defaultMode: 420
          name: grafana-datasources
        name: grafana-datasources
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: grafana-dashboards
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-grafana-route
  namespace: 80c8d5-dev
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
  podSelector:
    matchLabels:
      name: nginx-grafana
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-grafana-to-prometheus
  namespace: 80c8d5-dev
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          name: nginx-grafana
    ports:
    - port: 9090
      protocol: TCP
  podSelector:
    matchLabels:
      name: nginx-prometheus
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prometheus-to-alertmanager
  namespace: 80c8d5-dev
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          name: nginx-prometheus
    ports:
    - port: 9093
      protocol: TCP
  podSelector:
    matchLabels:
      name: nginx-alertmanager
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx-grafana
  namespace: 80c8d5-dev
spec:
  port:
    targetPort: grafana-proxy
  tls:
    termination: edge
  to:
    kind: Service
    name: nginx-grafana
    weight: 100
  wildcardPolicy: None
